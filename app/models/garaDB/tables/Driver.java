/**
 * This class is generated by jOOQ
 */
package models.garaDB.tables;


import models.garaDB.Gara;
import models.garaDB.Keys;
import models.garaDB.tables.records.DriverRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Driver extends TableImpl<DriverRecord> {

    private static final long serialVersionUID = 1093701220;

    /**
     * The reference instance of <code>Gara.Driver</code>
     */
    public static final Driver DRIVER = new Driver();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DriverRecord> getRecordType() {
        return DriverRecord.class;
    }

    /**
     * The column <code>Gara.Driver.ID</code>.
     */
    public final TableField<DriverRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.Driver.memberID</code>.
     */
    public final TableField<DriverRecord, Integer> MEMBERID = createField("memberID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.Driver.licenseNumber</code>.
     */
    public final TableField<DriverRecord, String> LICENSENUMBER = createField("licenseNumber", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.Driver.licensePic</code>.
     */
    public final TableField<DriverRecord, String> LICENSEPIC = createField("licensePic", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.Driver.identyCardPic</code>.
     */
    public final TableField<DriverRecord, String> IDENTYCARDPIC = createField("identyCardPic", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.Driver.licenseExpireDate</code>.
     */
    public final TableField<DriverRecord, Date> LICENSEEXPIREDATE = createField("licenseExpireDate", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>Gara.Driver</code> table reference
     */
    public Driver() {
        this("Driver", null);
    }

    /**
     * Create an aliased <code>Gara.Driver</code> table reference
     */
    public Driver(String alias) {
        this(alias, DRIVER);
    }

    private Driver(String alias, Table<DriverRecord> aliased) {
        this(alias, aliased, null);
    }

    private Driver(String alias, Table<DriverRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gara.GARA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DriverRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DRIVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DriverRecord> getPrimaryKey() {
        return Keys.KEY_DRIVER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DriverRecord>> getKeys() {
        return Arrays.<UniqueKey<DriverRecord>>asList(Keys.KEY_DRIVER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DriverRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DriverRecord, ?>>asList(Keys.FKDRIVER32250);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Driver as(String alias) {
        return new Driver(alias, this);
    }

    /**
     * Rename this table
     */
    public Driver rename(String name) {
        return new Driver(name, null);
    }
}
