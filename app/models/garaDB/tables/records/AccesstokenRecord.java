/**
 * This class is generated by jOOQ
 */
package models.garaDB.tables.records;


import models.garaDB.tables.Accesstoken;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "AccessToken", schema = "Gara")
public class AccesstokenRecord extends UpdatableRecordImpl<AccesstokenRecord> implements Record7<Integer, Integer, Timestamp, String, Timestamp, String, String> {

    private static final long serialVersionUID = -1605327088;

    /**
     * Setter for <code>Gara.AccessToken.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Gara.AccessToken.memberID</code>.
     */
    public void setMemberid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.memberID</code>.
     */
    @Column(name = "memberID", nullable = false, precision = 10)
    @NotNull
    public Integer getMemberid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Gara.AccessToken.TIMESTAMP</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.TIMESTAMP</code>.
     */
    @Column(name = "TIMESTAMP", nullable = false)
    public Timestamp getTimestamp() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>Gara.AccessToken.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.value</code>.
     */
    @Column(name = "value", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Gara.AccessToken.lastUsed</code>.
     */
    public void setLastused(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.lastUsed</code>.
     */
    @Column(name = "lastUsed", nullable = false)
    public Timestamp getLastused() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>Gara.AccessToken.ip</code>.
     */
    public void setIp(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.ip</code>.
     */
    @Column(name = "ip", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getIp() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Gara.AccessToken.browser</code>.
     */
    public void setBrowser(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Gara.AccessToken.browser</code>.
     */
    @Column(name = "browser", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getBrowser() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Timestamp, String, Timestamp, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Timestamp, String, Timestamp, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Accesstoken.ACCESSTOKEN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Accesstoken.ACCESSTOKEN.MEMBERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Accesstoken.ACCESSTOKEN.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Accesstoken.ACCESSTOKEN.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Accesstoken.ACCESSTOKEN.LASTUSED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Accesstoken.ACCESSTOKEN.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Accesstoken.ACCESSTOKEN.BROWSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMemberid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastused();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getBrowser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value2(Integer value) {
        setMemberid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value3(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value4(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value5(Timestamp value) {
        setLastused(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value6(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord value7(String value) {
        setBrowser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccesstokenRecord values(Integer value1, Integer value2, Timestamp value3, String value4, Timestamp value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccesstokenRecord
     */
    public AccesstokenRecord() {
        super(Accesstoken.ACCESSTOKEN);
    }

    /**
     * Create a detached, initialised AccesstokenRecord
     */
    public AccesstokenRecord(Integer id, Integer memberid, Timestamp timestamp, String value, Timestamp lastused, String ip, String browser) {
        super(Accesstoken.ACCESSTOKEN);

        set(0, id);
        set(1, memberid);
        set(2, timestamp);
        set(3, value);
        set(4, lastused);
        set(5, ip);
        set(6, browser);
    }
}
