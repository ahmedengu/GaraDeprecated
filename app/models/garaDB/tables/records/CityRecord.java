/**
 * This class is generated by jOOQ
 */
package models.garaDB.tables.records;


import models.garaDB.tables.City;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "City", schema = "gara")
public class CityRecord extends UpdatableRecordImpl<CityRecord> implements Record6<Integer, String, Integer, String, Double, Double> {

    private static final long serialVersionUID = -1851360961;

    /**
     * Setter for <code>gara.City.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gara.City.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gara.City.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gara.City.name</code>.
     */
    @Column(name = "name", nullable = false, length = 80)
    @NotNull
    @Size(max = 80)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gara.City.countryID</code>.
     */
    public void setCountryid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>gara.City.countryID</code>.
     */
    @Column(name = "countryID", nullable = false, precision = 10)
    @NotNull
    public Integer getCountryid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>gara.City.pic</code>.
     */
    public void setPic(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gara.City.pic</code>.
     */
    @Column(name = "pic", length = 65535)
    @Size(max = 65535)
    public String getPic() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gara.City.longitude</code>.
     */
    public void setLongitude(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>gara.City.longitude</code>.
     */
    @Column(name = "longitude", precision = 22)
    public Double getLongitude() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>gara.City.latitude</code>.
     */
    public void setLatitude(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>gara.City.latitude</code>.
     */
    @Column(name = "latitude", precision = 22)
    public Double getLatitude() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Double, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Double, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return City.CITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return City.CITY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return City.CITY.COUNTRYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return City.CITY.PIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return City.CITY.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return City.CITY.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCountryid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value3(Integer value) {
        setCountryid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value4(String value) {
        setPic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value5(Double value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord value6(Double value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityRecord values(Integer value1, String value2, Integer value3, String value4, Double value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CityRecord
     */
    public CityRecord() {
        super(City.CITY);
    }

    /**
     * Create a detached, initialised CityRecord
     */
    public CityRecord(Integer id, String name, Integer countryid, String pic, Double longitude, Double latitude) {
        super(City.CITY);

        set(0, id);
        set(1, name);
        set(2, countryid);
        set(3, pic);
        set(4, longitude);
        set(5, latitude);
    }
}
