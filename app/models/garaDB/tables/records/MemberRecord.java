/**
 * This class is generated by jOOQ
 */
package models.garaDB.tables.records;


import models.garaDB.tables.Member;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Member", schema = "Gara")
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> {

    private static final long serialVersionUID = 1556716252;

    /**
     * Setter for <code>Gara.Member.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Gara.Member.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Gara.Member.TIMESTAMP</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>Gara.Member.TIMESTAMP</code>.
     */
    @Column(name = "TIMESTAMP", nullable = false)
    public Timestamp getTimestamp() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>Gara.Member.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Gara.Member.name</code>.
     */
    @Column(name = "name", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Gara.Member.username</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Gara.Member.username</code>.
     */
    @Column(name = "username", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Gara.Member.studentEmail</code>.
     */
    public void setStudentemail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Gara.Member.studentEmail</code>.
     */
    @Column(name = "studentEmail", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getStudentemail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Gara.Member.phoneNumber</code>.
     */
    public void setPhonenumber(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>Gara.Member.phoneNumber</code>.
     */
    @Column(name = "phoneNumber", length = 15)
    @Size(max = 15)
    public String getPhonenumber() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Gara.Member.birthDate</code>.
     */
    public void setBirthdate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>Gara.Member.birthDate</code>.
     */
    @Column(name = "birthDate")
    public Timestamp getBirthdate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>Gara.Member.activited</code>.
     */
    public void setActivited(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>Gara.Member.activited</code>.
     */
    @Column(name = "activited", precision = 10)
    public Integer getActivited() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>Gara.Member.gender</code>.
     */
    public void setGender(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>Gara.Member.gender</code>.
     */
    @Column(name = "gender", length = 255)
    @Size(max = 255)
    public String getGender() {
        return (String) get(8);
    }

    /**
     * Setter for <code>Gara.Member.password</code>.
     */
    public void setPassword(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>Gara.Member.password</code>.
     */
    @Column(name = "password", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getPassword() {
        return (String) get(9);
    }

    /**
     * Setter for <code>Gara.Member.collegeID</code>.
     */
    public void setCollegeid(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>Gara.Member.collegeID</code>.
     */
    @Column(name = "collegeID", precision = 10)
    public Integer getCollegeid() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>Gara.Member.salt</code>.
     */
    public void setSalt(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>Gara.Member.salt</code>.
     */
    @Column(name = "salt", length = 10)
    @Size(max = 10)
    public String getSalt() {
        return (String) get(11);
    }

    /**
     * Setter for <code>Gara.Member.pic</code>.
     */
    public void setPic(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>Gara.Member.pic</code>.
     */
    @Column(name = "pic", length = 65535)
    @Size(max = 65535)
    public String getPic() {
        return (String) get(12);
    }

    /**
     * Setter for <code>Gara.Member.bloodType</code>.
     */
    public void setBloodtype(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>Gara.Member.bloodType</code>.
     */
    @Column(name = "bloodType", length = 2)
    @Size(max = 2)
    public String getBloodtype() {
        return (String) get(13);
    }

    /**
     * Setter for <code>Gara.Member.emergencyNumber</code>.
     */
    public void setEmergencynumber(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>Gara.Member.emergencyNumber</code>.
     */
    @Column(name = "emergencyNumber", length = 65535)
    @Size(max = 65535)
    public String getEmergencynumber() {
        return (String) get(14);
    }

    /**
     * Setter for <code>Gara.Member.balance</code>.
     */
    public void setBalance(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>Gara.Member.balance</code>.
     */
    @Column(name = "balance", precision = 10)
    public Integer getBalance() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>Gara.Member.studentEmailActivationCode</code>.
     */
    public void setStudentemailactivationcode(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>Gara.Member.studentEmailActivationCode</code>.
     */
    @Column(name = "studentEmailActivationCode", length = 10)
    @Size(max = 10)
    public String getStudentemailactivationcode() {
        return (String) get(16);
    }

    /**
     * Setter for <code>Gara.Member.rideID</code>.
     */
    public void setRideid(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>Gara.Member.rideID</code>.
     */
    @Column(name = "rideID", precision = 10)
    public Integer getRideid() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>Gara.Member.memberGroupID</code>.
     */
    public void setMembergroupid(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>Gara.Member.memberGroupID</code>.
     */
    @Column(name = "memberGroupID", precision = 10)
    public Integer getMembergroupid() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>Gara.Member.longitude</code>.
     */
    public void setLongitude(Double value) {
        set(19, value);
    }

    /**
     * Getter for <code>Gara.Member.longitude</code>.
     */
    @Column(name = "longitude", precision = 22)
    public Double getLongitude() {
        return (Double) get(19);
    }

    /**
     * Setter for <code>Gara.Member.latitude</code>.
     */
    public void setLatitude(Double value) {
        set(20, value);
    }

    /**
     * Getter for <code>Gara.Member.latitude</code>.
     */
    @Column(name = "latitude", precision = 22)
    public Double getLatitude() {
        return (Double) get(20);
    }

    /**
     * Setter for <code>Gara.Member.pin</code>.
     */
    public void setPin(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>Gara.Member.pin</code>.
     */
    @Column(name = "pin", length = 65535)
    @Size(max = 65535)
    public String getPin() {
        return (String) get(21);
    }

    /**
     * Setter for <code>Gara.Member.universityID</code>.
     */
    public void setUniversityid(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>Gara.Member.universityID</code>.
     */
    @Column(name = "universityID", precision = 10)
    public Integer getUniversityid() {
        return (Integer) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(Integer id, Timestamp timestamp, String name, String username, String studentemail, String phonenumber, Timestamp birthdate, Integer activited, String gender, String password, Integer collegeid, String salt, String pic, String bloodtype, String emergencynumber, Integer balance, String studentemailactivationcode, Integer rideid, Integer membergroupid, Double longitude, Double latitude, String pin, Integer universityid) {
        super(Member.MEMBER);

        set(0, id);
        set(1, timestamp);
        set(2, name);
        set(3, username);
        set(4, studentemail);
        set(5, phonenumber);
        set(6, birthdate);
        set(7, activited);
        set(8, gender);
        set(9, password);
        set(10, collegeid);
        set(11, salt);
        set(12, pic);
        set(13, bloodtype);
        set(14, emergencynumber);
        set(15, balance);
        set(16, studentemailactivationcode);
        set(17, rideid);
        set(18, membergroupid);
        set(19, longitude);
        set(20, latitude);
        set(21, pin);
        set(22, universityid);
    }
}
