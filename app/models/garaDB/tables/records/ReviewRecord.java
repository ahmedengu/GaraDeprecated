/**
 * This class is generated by jOOQ
 */
package models.garaDB.tables.records;


import models.garaDB.tables.Review;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Review", schema = "Gara")
public class ReviewRecord extends UpdatableRecordImpl<ReviewRecord> implements Record5<Integer, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = -624261258;

    /**
     * Setter for <code>Gara.Review.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Gara.Review.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Gara.Review.reviewerMemberID</code>.
     */
    public void setReviewermemberid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Gara.Review.reviewerMemberID</code>.
     */
    @Column(name = "reviewerMemberID", nullable = false, precision = 10)
    @NotNull
    public Integer getReviewermemberid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Gara.Review.reviewedMemberID</code>.
     */
    public void setReviewedmemberid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Gara.Review.reviewedMemberID</code>.
     */
    @Column(name = "reviewedMemberID", nullable = false, precision = 10)
    @NotNull
    public Integer getReviewedmemberid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Gara.Review.rating</code>.
     */
    public void setRating(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>Gara.Review.rating</code>.
     */
    @Column(name = "rating", nullable = false, precision = 10)
    @NotNull
    public Integer getRating() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>Gara.Review.comment</code>.
     */
    public void setComment(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Gara.Review.comment</code>.
     */
    @Column(name = "comment", length = 65535)
    @Size(max = 65535)
    public String getComment() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Review.REVIEW.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Review.REVIEW.REVIEWERMEMBERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Review.REVIEW.REVIEWEDMEMBERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Review.REVIEW.RATING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Review.REVIEW.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getReviewermemberid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getReviewedmemberid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getRating();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord value2(Integer value) {
        setReviewermemberid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord value3(Integer value) {
        setReviewedmemberid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord value4(Integer value) {
        setRating(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord value5(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReviewRecord
     */
    public ReviewRecord() {
        super(Review.REVIEW);
    }

    /**
     * Create a detached, initialised ReviewRecord
     */
    public ReviewRecord(Integer id, Integer reviewermemberid, Integer reviewedmemberid, Integer rating, String comment) {
        super(Review.REVIEW);

        set(0, id);
        set(1, reviewermemberid);
        set(2, reviewedmemberid);
        set(3, rating);
        set(4, comment);
    }
}
