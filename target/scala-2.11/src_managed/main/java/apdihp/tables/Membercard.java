/**
 * This class is generated by jOOQ
 */
package apdihp.tables;


import apdihp.Gara;
import apdihp.Keys;
import apdihp.tables.records.MembercardRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Membercard extends TableImpl<MembercardRecord> {

    private static final long serialVersionUID = 1093707097;

    /**
     * The reference instance of <code>Gara.MemberCard</code>
     */
    public static final Membercard MEMBERCARD = new Membercard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MembercardRecord> getRecordType() {
        return MembercardRecord.class;
    }

    /**
     * The column <code>Gara.MemberCard.ID</code>.
     */
    public final TableField<MembercardRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.MemberCard.memberID</code>.
     */
    public final TableField<MembercardRecord, Integer> MEMBERID = createField("memberID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.MemberCard.type</code>.
     */
    public final TableField<MembercardRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.MemberCard.number</code>.
     */
    public final TableField<MembercardRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.MemberCard.expireDate</code>.
     */
    public final TableField<MembercardRecord, String> EXPIREDATE = createField("expireDate", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.MemberCard.secrit</code>.
     */
    public final TableField<MembercardRecord, String> SECRIT = createField("secrit", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>Gara.MemberCard</code> table reference
     */
    public Membercard() {
        this("MemberCard", null);
    }

    /**
     * Create an aliased <code>Gara.MemberCard</code> table reference
     */
    public Membercard(String alias) {
        this(alias, MEMBERCARD);
    }

    private Membercard(String alias, Table<MembercardRecord> aliased) {
        this(alias, aliased, null);
    }

    private Membercard(String alias, Table<MembercardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gara.GARA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MembercardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMBERCARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MembercardRecord> getPrimaryKey() {
        return Keys.KEY_MEMBERCARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MembercardRecord>> getKeys() {
        return Arrays.<UniqueKey<MembercardRecord>>asList(Keys.KEY_MEMBERCARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MembercardRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MembercardRecord, ?>>asList(Keys.FKMEMBERCARD555539);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Membercard as(String alias) {
        return new Membercard(alias, this);
    }

    /**
     * Rename this table
     */
    public Membercard rename(String name) {
        return new Membercard(name, null);
    }
}
