/**
 * This class is generated by jOOQ
 */
package apdihp.tables;


import apdihp.Gara;
import apdihp.Keys;
import apdihp.tables.records.RideRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ride extends TableImpl<RideRecord> {

    private static final long serialVersionUID = 745488872;

    /**
     * The reference instance of <code>Gara.Ride</code>
     */
    public static final Ride RIDE = new Ride();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RideRecord> getRecordType() {
        return RideRecord.class;
    }

    /**
     * The column <code>Gara.Ride.ID</code>.
     */
    public final TableField<RideRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.TIMESTAMP</code>.
     */
    public final TableField<RideRecord, Timestamp> TIMESTAMP = createField("TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Gara.Ride.sourceLongitude</code>.
     */
    public final TableField<RideRecord, Double> SOURCELONGITUDE = createField("sourceLongitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.sourceLatitude</code>.
     */
    public final TableField<RideRecord, Double> SOURCELATITUDE = createField("sourceLatitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.destinationLongitude</code>.
     */
    public final TableField<RideRecord, Double> DESTINATIONLONGITUDE = createField("destinationLongitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.destinationLatitude</code>.
     */
    public final TableField<RideRecord, Double> DESTINATIONLATITUDE = createField("destinationLatitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.fare</code>.
     */
    public final TableField<RideRecord, Integer> FARE = createField("fare", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Gara.Ride.startTime</code>.
     */
    public final TableField<RideRecord, Timestamp> STARTTIME = createField("startTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Gara.Ride.endTime</code>.
     */
    public final TableField<RideRecord, Timestamp> ENDTIME = createField("endTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Gara.Ride.carID</code>.
     */
    public final TableField<RideRecord, Integer> CARID = createField("carID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.Ride.accepted</code>.
     */
    public final TableField<RideRecord, Integer> ACCEPTED = createField("accepted", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>Gara.Ride.driverCheck</code>.
     */
    public final TableField<RideRecord, Integer> DRIVERCHECK = createField("driverCheck", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Gara.Ride.passangerCheck</code>.
     */
    public final TableField<RideRecord, Integer> PASSANGERCHECK = createField("passangerCheck", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Gara.Ride</code> table reference
     */
    public Ride() {
        this("Ride", null);
    }

    /**
     * Create an aliased <code>Gara.Ride</code> table reference
     */
    public Ride(String alias) {
        this(alias, RIDE);
    }

    private Ride(String alias, Table<RideRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ride(String alias, Table<RideRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gara.GARA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RideRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RIDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RideRecord> getPrimaryKey() {
        return Keys.KEY_RIDE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RideRecord>> getKeys() {
        return Arrays.<UniqueKey<RideRecord>>asList(Keys.KEY_RIDE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RideRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RideRecord, ?>>asList(Keys.FKRIDE47095);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ride as(String alias) {
        return new Ride(alias, this);
    }

    /**
     * Rename this table
     */
    public Ride rename(String name) {
        return new Ride(name, null);
    }
}
