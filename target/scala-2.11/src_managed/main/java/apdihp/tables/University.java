/**
 * This class is generated by jOOQ
 */
package apdihp.tables;


import apdihp.Gara;
import apdihp.Keys;
import apdihp.tables.records.UniversityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class University extends TableImpl<UniversityRecord> {

    private static final long serialVersionUID = 662149727;

    /**
     * The reference instance of <code>Gara.University</code>
     */
    public static final University UNIVERSITY = new University();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UniversityRecord> getRecordType() {
        return UniversityRecord.class;
    }

    /**
     * The column <code>Gara.University.ID</code>.
     */
    public final TableField<UniversityRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Gara.University.name</code>.
     */
    public final TableField<UniversityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.University.cityID</code>.
     */
    public final TableField<UniversityRecord, Integer> CITYID = createField("cityID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Gara.University.longitude</code>.
     */
    public final TableField<UniversityRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>Gara.University.latitude</code>.
     */
    public final TableField<UniversityRecord, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>Gara.University.pic</code>.
     */
    public final TableField<UniversityRecord, String> PIC = createField("pic", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.url</code>.
     */
    public final TableField<UniversityRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.University.emailFormat</code>.
     */
    public final TableField<UniversityRecord, String> EMAILFORMAT = createField("emailFormat", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Gara.University.pageName</code>.
     */
    public final TableField<UniversityRecord, String> PAGENAME = createField("pageName", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.pageContent</code>.
     */
    public final TableField<UniversityRecord, String> PAGECONTENT = createField("pageContent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.pageDescription</code>.
     */
    public final TableField<UniversityRecord, String> PAGEDESCRIPTION = createField("pageDescription", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.pageKeywords</code>.
     */
    public final TableField<UniversityRecord, String> PAGEKEYWORDS = createField("pageKeywords", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.pageSubdomain</code>.
     */
    public final TableField<UniversityRecord, String> PAGESUBDOMAIN = createField("pageSubdomain", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.contactPersonEmail</code>.
     */
    public final TableField<UniversityRecord, String> CONTACTPERSONEMAIL = createField("contactPersonEmail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.contactPersonPassword</code>.
     */
    public final TableField<UniversityRecord, String> CONTACTPERSONPASSWORD = createField("contactPersonPassword", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Gara.University.parkingCost</code>.
     */
    public final TableField<UniversityRecord, Integer> PARKINGCOST = createField("parkingCost", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Gara.University</code> table reference
     */
    public University() {
        this("University", null);
    }

    /**
     * Create an aliased <code>Gara.University</code> table reference
     */
    public University(String alias) {
        this(alias, UNIVERSITY);
    }

    private University(String alias, Table<UniversityRecord> aliased) {
        this(alias, aliased, null);
    }

    private University(String alias, Table<UniversityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gara.GARA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UniversityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_UNIVERSITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UniversityRecord> getPrimaryKey() {
        return Keys.KEY_UNIVERSITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UniversityRecord>> getKeys() {
        return Arrays.<UniqueKey<UniversityRecord>>asList(Keys.KEY_UNIVERSITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UniversityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UniversityRecord, ?>>asList(Keys.FKUNIVERSITY759378);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public University as(String alias) {
        return new University(alias, this);
    }

    /**
     * Rename this table
     */
    public University rename(String name) {
        return new University(name, null);
    }
}
