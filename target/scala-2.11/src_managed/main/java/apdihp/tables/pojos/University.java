/**
 * This class is generated by jOOQ
 */
package apdihp.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "University", schema = "Gara")
public class University implements Serializable {

    private static final long serialVersionUID = 1170970182;

    private Integer id;
    private String  name;
    private Integer cityid;
    private Double  longitude;
    private Double  latitude;
    private String  pic;
    private String  url;
    private String  emailformat;
    private String  pagename;
    private String  pagecontent;
    private String  pagedescription;
    private String  pagekeywords;
    private String  pagesubdomain;
    private String  contactpersonemail;
    private String  contactpersonpassword;

    public University() {}

    public University(University value) {
        this.id = value.id;
        this.name = value.name;
        this.cityid = value.cityid;
        this.longitude = value.longitude;
        this.latitude = value.latitude;
        this.pic = value.pic;
        this.url = value.url;
        this.emailformat = value.emailformat;
        this.pagename = value.pagename;
        this.pagecontent = value.pagecontent;
        this.pagedescription = value.pagedescription;
        this.pagekeywords = value.pagekeywords;
        this.pagesubdomain = value.pagesubdomain;
        this.contactpersonemail = value.contactpersonemail;
        this.contactpersonpassword = value.contactpersonpassword;
    }

    public University(
        Integer id,
        String  name,
        Integer cityid,
        Double  longitude,
        Double  latitude,
        String  pic,
        String  url,
        String  emailformat,
        String  pagename,
        String  pagecontent,
        String  pagedescription,
        String  pagekeywords,
        String  pagesubdomain,
        String  contactpersonemail,
        String  contactpersonpassword
    ) {
        this.id = id;
        this.name = name;
        this.cityid = cityid;
        this.longitude = longitude;
        this.latitude = latitude;
        this.pic = pic;
        this.url = url;
        this.emailformat = emailformat;
        this.pagename = pagename;
        this.pagecontent = pagecontent;
        this.pagedescription = pagedescription;
        this.pagekeywords = pagekeywords;
        this.pagesubdomain = pagesubdomain;
        this.contactpersonemail = contactpersonemail;
        this.contactpersonpassword = contactpersonpassword;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "name", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "cityID", nullable = false, precision = 10)
    @NotNull
    public Integer getCityid() {
        return this.cityid;
    }

    public void setCityid(Integer cityid) {
        this.cityid = cityid;
    }

    @Column(name = "longitude", precision = 22)
    public Double getLongitude() {
        return this.longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    @Column(name = "latitude", precision = 22)
    public Double getLatitude() {
        return this.latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    @Column(name = "pic", length = 65535)
    @Size(max = 65535)
    public String getPic() {
        return this.pic;
    }

    public void setPic(String pic) {
        this.pic = pic;
    }

    @Column(name = "url", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getUrl() {
        return this.url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    @Column(name = "emailFormat", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getEmailformat() {
        return this.emailformat;
    }

    public void setEmailformat(String emailformat) {
        this.emailformat = emailformat;
    }

    @Column(name = "pageName", length = 65535)
    @Size(max = 65535)
    public String getPagename() {
        return this.pagename;
    }

    public void setPagename(String pagename) {
        this.pagename = pagename;
    }

    @Column(name = "pageContent", length = 65535)
    @Size(max = 65535)
    public String getPagecontent() {
        return this.pagecontent;
    }

    public void setPagecontent(String pagecontent) {
        this.pagecontent = pagecontent;
    }

    @Column(name = "pageDescription", length = 65535)
    @Size(max = 65535)
    public String getPagedescription() {
        return this.pagedescription;
    }

    public void setPagedescription(String pagedescription) {
        this.pagedescription = pagedescription;
    }

    @Column(name = "pageKeywords", length = 65535)
    @Size(max = 65535)
    public String getPagekeywords() {
        return this.pagekeywords;
    }

    public void setPagekeywords(String pagekeywords) {
        this.pagekeywords = pagekeywords;
    }

    @Column(name = "pageSubdomain", length = 65535)
    @Size(max = 65535)
    public String getPagesubdomain() {
        return this.pagesubdomain;
    }

    public void setPagesubdomain(String pagesubdomain) {
        this.pagesubdomain = pagesubdomain;
    }

    @Column(name = "contactPersonEmail", length = 65535)
    @Size(max = 65535)
    public String getContactpersonemail() {
        return this.contactpersonemail;
    }

    public void setContactpersonemail(String contactpersonemail) {
        this.contactpersonemail = contactpersonemail;
    }

    @Column(name = "contactPersonPassword", length = 65535)
    @Size(max = 65535)
    public String getContactpersonpassword() {
        return this.contactpersonpassword;
    }

    public void setContactpersonpassword(String contactpersonpassword) {
        this.contactpersonpassword = contactpersonpassword;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("University (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(cityid);
        sb.append(", ").append(longitude);
        sb.append(", ").append(latitude);
        sb.append(", ").append(pic);
        sb.append(", ").append(url);
        sb.append(", ").append(emailformat);
        sb.append(", ").append(pagename);
        sb.append(", ").append(pagecontent);
        sb.append(", ").append(pagedescription);
        sb.append(", ").append(pagekeywords);
        sb.append(", ").append(pagesubdomain);
        sb.append(", ").append(contactpersonemail);
        sb.append(", ").append(contactpersonpassword);

        sb.append(")");
        return sb.toString();
    }
}
