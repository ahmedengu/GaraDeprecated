/**
 * This class is generated by jOOQ
 */
package apdihp.tables.records;


import apdihp.tables.Ride;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Ride", schema = "Gara")
public class RideRecord extends UpdatableRecordImpl<RideRecord> implements Record13<Integer, Timestamp, Double, Double, Double, Double, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 569283449;

    /**
     * Setter for <code>Gara.Ride.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Gara.Ride.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Gara.Ride.TIMESTAMP</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>Gara.Ride.TIMESTAMP</code>.
     */
    @Column(name = "TIMESTAMP", nullable = false)
    public Timestamp getTimestamp() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>Gara.Ride.sourceLongitude</code>.
     */
    public void setSourcelongitude(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>Gara.Ride.sourceLongitude</code>.
     */
    @Column(name = "sourceLongitude", nullable = false, precision = 22)
    @NotNull
    public Double getSourcelongitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>Gara.Ride.sourceLatitude</code>.
     */
    public void setSourcelatitude(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>Gara.Ride.sourceLatitude</code>.
     */
    @Column(name = "sourceLatitude", nullable = false, precision = 22)
    @NotNull
    public Double getSourcelatitude() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>Gara.Ride.destinationLongitude</code>.
     */
    public void setDestinationlongitude(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>Gara.Ride.destinationLongitude</code>.
     */
    @Column(name = "destinationLongitude", nullable = false, precision = 22)
    @NotNull
    public Double getDestinationlongitude() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>Gara.Ride.destinationLatitude</code>.
     */
    public void setDestinationlatitude(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>Gara.Ride.destinationLatitude</code>.
     */
    @Column(name = "destinationLatitude", nullable = false, precision = 22)
    @NotNull
    public Double getDestinationlatitude() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>Gara.Ride.fare</code>.
     */
    public void setFare(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>Gara.Ride.fare</code>.
     */
    @Column(name = "fare", precision = 10)
    public Integer getFare() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>Gara.Ride.startTime</code>.
     */
    public void setStarttime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>Gara.Ride.startTime</code>.
     */
    @Column(name = "startTime")
    public Timestamp getStarttime() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>Gara.Ride.endTime</code>.
     */
    public void setEndtime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>Gara.Ride.endTime</code>.
     */
    @Column(name = "endTime")
    public Timestamp getEndtime() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>Gara.Ride.carID</code>.
     */
    public void setCarid(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>Gara.Ride.carID</code>.
     */
    @Column(name = "carID", nullable = false, precision = 10)
    @NotNull
    public Integer getCarid() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>Gara.Ride.accepted</code>.
     */
    public void setAccepted(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>Gara.Ride.accepted</code>.
     */
    @Column(name = "accepted", precision = 10)
    public Integer getAccepted() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>Gara.Ride.driverCheck</code>.
     */
    public void setDrivercheck(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>Gara.Ride.driverCheck</code>.
     */
    @Column(name = "driverCheck", precision = 10)
    public Integer getDrivercheck() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>Gara.Ride.passangerCheck</code>.
     */
    public void setPassangercheck(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>Gara.Ride.passangerCheck</code>.
     */
    @Column(name = "passangerCheck", precision = 10)
    public Integer getPassangercheck() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Timestamp, Double, Double, Double, Double, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Timestamp, Double, Double, Double, Double, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Ride.RIDE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Ride.RIDE.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Ride.RIDE.SOURCELONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Ride.RIDE.SOURCELATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Ride.RIDE.DESTINATIONLONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Ride.RIDE.DESTINATIONLATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Ride.RIDE.FARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Ride.RIDE.STARTTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Ride.RIDE.ENDTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Ride.RIDE.CARID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Ride.RIDE.ACCEPTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Ride.RIDE.DRIVERCHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Ride.RIDE.PASSANGERCHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getSourcelongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getSourcelatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getDestinationlongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getDestinationlatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getFare();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getEndtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getCarid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getAccepted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getDrivercheck();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getPassangercheck();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value2(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value3(Double value) {
        setSourcelongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value4(Double value) {
        setSourcelatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value5(Double value) {
        setDestinationlongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value6(Double value) {
        setDestinationlatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value7(Integer value) {
        setFare(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value8(Timestamp value) {
        setStarttime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value9(Timestamp value) {
        setEndtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value10(Integer value) {
        setCarid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value11(Integer value) {
        setAccepted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value12(Integer value) {
        setDrivercheck(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord value13(Integer value) {
        setPassangercheck(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RideRecord values(Integer value1, Timestamp value2, Double value3, Double value4, Double value5, Double value6, Integer value7, Timestamp value8, Timestamp value9, Integer value10, Integer value11, Integer value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RideRecord
     */
    public RideRecord() {
        super(Ride.RIDE);
    }

    /**
     * Create a detached, initialised RideRecord
     */
    public RideRecord(Integer id, Timestamp timestamp, Double sourcelongitude, Double sourcelatitude, Double destinationlongitude, Double destinationlatitude, Integer fare, Timestamp starttime, Timestamp endtime, Integer carid, Integer accepted, Integer drivercheck, Integer passangercheck) {
        super(Ride.RIDE);

        set(0, id);
        set(1, timestamp);
        set(2, sourcelongitude);
        set(3, sourcelatitude);
        set(4, destinationlongitude);
        set(5, destinationlatitude);
        set(6, fare);
        set(7, starttime);
        set(8, endtime);
        set(9, carid);
        set(10, accepted);
        set(11, drivercheck);
        set(12, passangercheck);
    }
}
